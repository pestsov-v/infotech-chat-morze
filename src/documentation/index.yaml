openapi: 3.0.1
info:
  title: Infotech Morze Chat
  description: Application for sending and receiving messages in Morse language. Each user can send a message by specifying a recipient. This message will be transformed into Morse code and the user will receive an encrypted message.
  contact:
    email: pestsov.js@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:3001/api
  - url: https://localhost:3002/api
  
paths: 
  /signup:
    post: 
      summary: Sign up new user
      tags:
        - authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username: 
                  type: string
                  example: Ave
                firstName: 
                  type: string
                  example: Vlad
                lastName: 
                  type: string
                  example: Vlad
                password: 
                  type: string
                  example: 1234678
      responses:
        201:
          description: User success created an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route-signup__response-201'
        
        400:
          description: You not enter one or more required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception--signup__response-400'
        
        409: 
          description: Dublicate username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception--signup__response-409'
  
  /login:
    post: 
      summary: Login user
      tags:
        - authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username: 
                  type: string
                  example: Ave
                password: 
                  type: string
                  example: 1234678 
      responses:
        200:
          description: User login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route-login__response-200'
        
        400:
          description: Incorrect username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception-login__response-400'
  
  /logout:
    get:
      security:
        - bearerAuth: []
      summary: Logout in account
      tags:
        - authentification
      responses:
        200:
          description: User success logout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route--logout__response-200'
      
  /user:
    get:
      security:
        - bearerAuth: []
      summary: Get List of all users
      tags:
        - user
      responses:
        200: 
          description: Get list of all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route--get-users__response-200'

        401:
          description: User unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/middleware--protect__response-401'
        
        403:
          description: User have not admin rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/middleware--restrict-to__response-403'
        
        404: 
          description: User list is empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception--get-users__response-404'
                
  /user/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Get user by userId
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User id
      tags:
        - user
      responses:
        200:
          description: Get user by user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user--get-user__response-200'
                
        401:
          description: User unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/middleware--protect__response-401'
        
        403:
          description: User have not admin rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/middleware--restrict-to__response-403'
        
        404: 
          description: User list is empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception--user-not-found__response-404'
    
    put:
      security:
        - bearerAuth: []
      summary: Update user data by user id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User id
      tags:
        - user
      responses:
        200:
          description: Update user data by user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user--put-user__response-200'
                
        401:
          description: User unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/middleware--protect__response-401'
        
        403:
          description: User have not admin rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/middleware--restrict-to__response-403'
        
        404: 
          description: User list is empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception--user-not-found__response-404'

    delete:
      security:
        - bearerAuth: []
      summary: Delete user by user id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User id
      tags:
        - user
      responses:
        200:
          description: Update user data by user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user--delete-user__response-200'
                
        401:
          description: User unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/middleware--protect__response-401'
        
        403:
          description: User have not admin rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/middleware--restrict-to__response-403'
        
        404: 
          description: User list is empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception--user-not-found__response-404'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    route-signup__response-201:
      type: object
      properties:
        status: 
          type: string
          example: success
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyYjcxYmUwOGNiZWFhZjc2M2JhNjQ1ZSIsImlhdCI6MTY1NjE2NzM5MiwiZXhwIjoxNjYzOTQzMzkyfQ.j0-QlUIufK3NIESso3Dn6n_YaNUa34ukk8KXfzsCpe4
        data: 
          type: object
          properties:
            _id: 
              type: string
              example: 61cb77aa567dc378ee45db47
            firstName:
              type: string
              example: Vlad
            lastName:
              type: string
              example: Pestsov
            username: 
              type: string
              example: Ave
            role: 
              type: string
              example: user
            active: 
              type: boolean
              example: true
            createdAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            updatedAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            _v:
              type: number
              example: 0
 
    exception--signup__response-400:
      type: object
      properties:
        status: 
          type: string
          example: fail
        message:
          type: string
          example: One or more required fields are missing
  
    exception--signup__response-409:
      type: object
      properties:
        status: 
          type: string
          example: fail
        message:
          type: string
          example: A user with the same name already exists. Please select a different username
  
    route-login__response-200:
      type: object
      properties:
        status: 
          type: string
          example: success
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyYjcxYmUwOGNiZWFhZjc2M2JhNjQ1ZSIsImlhdCI6MTY1NjE2NzM5MiwiZXhwIjoxNjYzOTQzMzkyfQ.j0-QlUIufK3NIESso3Dn6n_YaNUa34ukk8KXfzsCpe4
        data: 
          type: object
          properties:
            _id: 
              type: string
              example: 61cb77aa567dc378ee45db47
            firstName:
              type: string
              example: Vlad
            lastName:
              type: string
              example: Pestsov
            username: 
              type: string
              example: Ave
            role: 
              type: string
              example: user
            active: 
              type: boolean
              example: true
            createdAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            updatedAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            _v:
              type: number
              example: 0
              
    exception-login__response-400:
      type: object
      properties:
        status: 
          type: string
          example: fail
        message:
          type: string
          example: Incorrect username or password
  
    route--logout__response-200:
        type: object
        properties:
          status: 
            type: string
            example: success
          message:
            type: string
            example: User logout success
  
    route--get-users__response-200:
      type: array
      items: 
        type: object
        properties:
          status: 
            type: string
            example: success
          amount: 
            type: number
            example: 1
          data: 
            type: object
            properties:
              _id: 
                type: string
                example: 61cb77aa567dc378ee45db47
              firstName:
                type: string
                example: Vlad
              lastName:
                type: string
                example: Pestsov
              username: 
                type: string
                example: Ave
              password: 
                type: string
                example: $2b$10$URXCCQ9cLM9XQli969yo8.tPZidZd0mUJU1f7kDkiD9ene22x73Ym
              role: 
                type: string
                example: user
              active: 
                type: boolean
                example: true
              createdAt: 
                type: string
                example: "2022-06-17T16:01:06.582Z"
              updatedAt: 
                type: string
                example: "2022-06-17T16:01:06.582Z"
              _v:
                type: number
                example: 0

    middleware--protect__response-401:
      type: object
      properties:
        status:
          type: string
          example: fail
        message: 
          type: string
          example: You are not authorized. Login to your account first

    middleware--restrict-to__response-403:
        type: object
        properties:
          status:
            type: string
            example: fail
          message: 
            type: string
            example: You do not have sufficient rules to use this feature

    exception--get-users__response-404:
      type: object
      properties:
        status: 
          type: string
          example: fail
        message:
          type: string
          example: "User list is empty"
          
    user--get-user__response-200:
      type: object
      properties:
        status: 
          type: string
          example: success
        data: 
          type: object
          properties:
            _id: 
              type: string
              example: 61cb77aa567dc378ee45db47
            firstName:
              type: string
              example: Vlad
            lastName:
              type: string
              example: Pestsov
            username: 
              type: string
              example: Ave
            password: 
              type: string
              example: $2b$10$URXCCQ9cLM9XQli969yo8.tPZidZd0mUJU1f7kDkiD9ene22x73Ym
            role: 
              type: string
              example: user
            active: 
              type: boolean
              example: true
            createdAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            updatedAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            _v:
              type: number
              example: 0
              
    exception--user-not-found__response-404:
      type: object
      properties:
        status: 
          type: string
          example: fail
        message:
          type: string
          example: User id not found


    user--put-user__response-200:
      type: object
      properties:
        status: 
          type: string
          example: success
        data: 
          type: object
          properties:
            _id: 
              type: string
              example: 61cb77aa567dc378ee45db47
            firstName:
              type: string
              example: Sergei
            lastName:
              type: string
              example: Mixeev
            username: 
              type: string
              example: Validator
            password: 
              type: string
              example: $2b$10$URXCCQ9cLM9XQli969yo8.tPZidZd0mUJU1f7kDkiD9ene22x73Ym
            role: 
              type: string
              example: user
            active: 
              type: boolean
              example: true
            createdAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            updatedAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            _v:
              type: number
              example: 0
              
    user--delete-user__response-200:
      type: object
      properties:
        status: 
          type: string
          example: success
        message:
          type: string
          example: User has been deleted success
        data: 
          type: object
          properties:
            _id: 
              type: string
              example: 61cb77aa567dc378ee45db47
            firstName:
              type: string
              example: Sergei
            lastName:
              type: string
              example: Mixeev
            username: 
              type: string
              example: Validator
            password: 
              type: string
              example: $2b$10$URXCCQ9cLM9XQli969yo8.tPZidZd0mUJU1f7kDkiD9ene22x73Ym
            role: 
              type: string
              example: user
            active: 
              type: boolean
              example: true
            createdAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            updatedAt: 
              type: string
              example: "2022-06-17T16:01:06.582Z"
            _v:
              type: number
              example: 0